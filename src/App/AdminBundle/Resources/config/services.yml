parameters:
#    app_admin.example.class: App\AdminBundle\Example

services:
    app.admin.admin.category:
        class: App\AdminBundle\Admin\CategoryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: product, label: 'Категории', label_catalogue: "AppAdminBundle" }
        arguments:
            - ~
            - App\MainBundle\Entity\Category
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [AppAdminBundle]]
            - [ setCategoryRepository, [@app.repository.category]]

    app.admin.admin.brand:
        class: App\AdminBundle\Admin\BrandAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: product, label: 'Бренды', label_catalogue: "AppAdminBundle" }
        arguments:
            - ~
            - App\MainBundle\Entity\Brand
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [AppAdminBundle]]

    app.admin.admin.prototype:
        class: App\AdminBundle\Admin\PrototypeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: product, label: 'Прототипы', label_catalogue: "AppAdminBundle" }
        arguments:
            - ~
            - App\MainBundle\Entity\Prototype
            - 'AppAdminBundle:Prototype'
        calls:
            - [ setTranslationDomain, [AppAdminBundle]]
            - [ setCategoryRepository, [@app.repository.category]]

    app.admin.admin.product:
        class: App\AdminBundle\Admin\ProductAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: product, label: 'Продукты', label_catalogue: "AppAdminBundle" }
        arguments:
            - ~
            - App\MainBundle\Entity\Product
            - 'AppAdminBundle:Product'
        calls:
            - [ setTranslationDomain, [AppAdminBundle]]
            - [ setCategoryRepository, [ @app.repository.category ]]
            - [ setSession, [@session]]
            - [ setPrototypeRepository, [@app.repository.prototype]]

    app.admin.admin.slide:
        class: App\AdminBundle\Admin\SlideAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: product, label: 'Слайды', label_catalogue: "AppAdminBundle" }
        arguments:
            - ~
            - App\MainBundle\Entity\Slide
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [AppAdminBundle]]

    app.admin.admin.mention:
        class: App\AdminBundle\Admin\MentionAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: product, label: 'Отзывы', label_catalogue: "AppAdminBundle" }
        arguments:
            - ~
            - App\MainBundle\Entity\Mention
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [AppAdminBundle]]

    app.admin.admin.user:
        class: App\AdminBundle\Admin\UserAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: product, label: 'Пользователи', label_catalogue: "AppAdminBundle" }
        arguments:
            - ~
            - App\MainBundle\Entity\User
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [AppAdminBundle]]

    app.admin.admin.action:
        class: App\AdminBundle\Admin\ActionAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: product, label: 'Акции', label_catalogue: "AppAdminBundle" }
        arguments:
            - ~
            - App\MainBundle\Entity\Action
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [AppAdminBundle]]

    app.admin.admin.order:
        class: App\AdminBundle\Admin\OrderAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: product, label: 'Заказы', label_catalogue: "AppAdminBundle" }
        arguments:
            - ~
            - App\MainBundle\Entity\Order
            - 'AppAdminBundle:Order'
        calls:
            - [ setTranslationDomain, [AppAdminBundle]]